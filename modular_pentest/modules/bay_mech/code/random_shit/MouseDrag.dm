//If we intercept it return true else return false
/**
 * Called by `/mob/proc/OnMouseDrag()` when a mob within this atom's contents performs a mouse drag operation. Used to provide alternative handling to mouse dragging within certain atoms.
 *
 * **Parameters**:
 * - `src_object` - The atom being dragged.
 * - `over_object` - The atom under the mouse pointer.
 * - `src_location` - The turf, stat panel, grid cell, etc from where `src_object` was dragged.
 * - `over_location` - The turf, stat panel, grid cell, etc. containing the object under the mouse pointer.
 * - `src_control` - The id of the skin control the object was dragged from
 * - `over_control` - The id of the skin control the object was dragged over
 * - `params` - Click and keyboard parameters.
 * - `user` - The mob performing the mouse drag operation.
 *
 * Returns boolean. TRUE if the mouse drag operation was intercepted, FALSE otherwise.
 */

/atom/proc/hud_layerise()
	plane = HUD_PLANE
	layer = HUD_LAYER

/mob/proc/handle_internal_lifeform(mob/lifeform_inside_me, breath_request)
	//Return: (NONSTANDARD)
	//		null if object handles breathing logic for lifeform
	//		datum/air_group to tell lifeform to process using that breath return
	//DEFAULT: Take air from turf to give to have mob process
	if(breath_request>0)
		var/datum/gas_mixture/environment = return_air()
		return remove_air_ratio(BREATH_VOLUME / environment.return_volume())
	else
		return null

/mob/remove_air_ratio(ratio)
	if(loc)
		return loc.remove_air_ratio(ratio)
	else
		return null

/mob/return_air()
	if(loc)
		return loc.return_air()
	else
		return null
